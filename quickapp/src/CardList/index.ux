<template>
  <div class='main-page'>
    <list>
      <list-item type="listItem" class="list-item" for="{{listData}}" onclick='showCardDetail($item.hash_id)'>
        
          <div class="item-dev">
            <text class="item-txt">中文名称: {{$item.name}}</text>
            <text class="item-txt">日文名称: {{parseName($item.name_ja)}}</text>
            <text class="item-txt">英文名称: {{parseName($item.name_en)}}</text>
            <text class="item-txt">卡片类型: {{$item.type_st}}</text>
          </div>
          <div class='item-img'>
            <image src="{{$item.img_url}}" data-img="{{$item.hash_id}}" onerror="bindImageError"></image>
          </div>
        
      </list-item>
    </list>
    <div class='bottom-div'>
    <input type='button' class='button-nav' value='&lt;&lt;' onclick='firstPage'></input>
    <input type='button' class='button-nav' value='&lt;' onclick='prevPage'></input>
    <input type='text' class='text-nav' value='{{currentPage}} / {{totalPage}}'></input>
    <input type='button' class='button-nav' value='&gt;' onclick='nextPage'></input>
    <input type='button' class='button-nav' value='&gt;&gt;' onclick='lastPage'></input>
    </div>
  </div>
</template>

<script>

import router from '@system.router'
const fetch = require('@system.fetch')

export default {
  public: {
    keyword: '',
    currentPage: 1,
    totalPage: 0,
    listData: []
  },
  getCardListData() {
    let that = this
    fetch.fetch({
      url: `${that.$app.$data.baseurl}/search?key=${that.keyword}&page=${that.currentPage}`,
      responseType: 'json',
      success: function (response) {
        that.currentPage = response.data.meta.cur_page
        that.totalPage = response.data.meta.total_page
        that.listData = response.data.cards
      }
    })
  },
  onInit () {
    this.getCardListData()
  },
  firstPage() {
    if (this.currentPage != 1) {
      this.currentPage = 1
      this.getCardListData()
    }
  },
  prevPage() {
    if (this.currentPage > 1) {
      this.currentPage--
      this.getCardListData()
    }
  },
  nextPage() {
    if (this.currentPage < this.totalPage) {
      this.currentPage++
      this.getCardListData()
    }
  },
  lastPage() {
    if (this.currentPage != this.totalPage) {
      this.currentPage = this.totalPage
      this.getCardListData()
    }
  },
  parseName(n) {
    if (!n || n === 'null') {
      n ='-'
    }
    return n
  },
  showCardDetail(hash) {
    router.push ({
      uri: '/CardDetail',
      params: { cardhash: hash }
    })
  },
  bindImageError(e) {
    var hash = e.target.dataset.img
    for (var i = 0; i < this.listData.length; i++) {
      if (this.listData[i].hash_id === hash) {
        this.listData[i].img_url = '../Common/img0.png'
        break
      }
      
    }
  }
}
</script>

<style>
.main-page {
    flex-direction: column;
    align-items: center;
  }
.card-list {
    background-color: #ffffff;
}
.bottom-div {
  width: 100%;
  height: 90px;
  padding-left: 2px;
  padding-right: 2px;
  margin-right: 8px; 
  margin-bottom: 8px;
  margin-top: 8px;
}
.button-nav {
    margin-left: 8px;
    width: 12%;
    height: 86px;
    border-radius: 43px;
    background-color: #fefefe;
    font-size: 30px;
    color: #000000;
  }
.text-nav {
  width: 50%;
  height: 86px;
  text-align: center;
  padding-top: 16px;
}
.list-item {
  height: 186px;
  padding-left: 8px;
  padding-right: 8px;
  border-bottom-width: 1px;
  border-bottom-color: #d3d3d3;
}
.item-dev {
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.item-img {
  width: 20%;
  margin-top: 2px;
  margin-bottom: 2px;
}
.item-txt {
  font-size: 28px;
  width: 100%;
  height: 61px;
  margin-top: 4px;
  lines: 1;
}
</style>
